{"version":3,"sources":["../../../../../src/core/renderers/webgl/utils/mapWebGLBlendModesToPixi.js"],"names":["mapWebGLBlendModesToPixi","gl","array","BLEND_MODES","NORMAL","ONE","ONE_MINUS_SRC_ALPHA","ADD","MULTIPLY","DST_COLOR","SCREEN","ONE_MINUS_SRC_COLOR","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATION","COLOR","LUMINOSITY"],"mappings":";;;kBAYwBA,wB;;AAZxB;;AAEA;;;;;;;;;;AAUe,SAASA,wBAAT,CAAkCC,EAAlC,EACf;AAAA,QADqDC,KACrD,uEAD6D,EAC7D;;AACI;AACA;AACAA,UAAMC,mBAAYC,MAAlB,IAA4B,CAACH,GAAGI,GAAJ,EAASJ,GAAGK,mBAAZ,CAA5B;AACAJ,UAAMC,mBAAYI,GAAlB,IAAyB,CAACN,GAAGI,GAAJ,EAASJ,GAAGI,GAAZ,CAAzB;AACAH,UAAMC,mBAAYK,QAAlB,IAA8B,CAACP,GAAGQ,SAAJ,EAAeR,GAAGK,mBAAlB,CAA9B;AACAJ,UAAMC,mBAAYO,MAAlB,IAA4B,CAACT,GAAGI,GAAJ,EAASJ,GAAGU,mBAAZ,CAA5B;AACAT,UAAMC,mBAAYS,OAAlB,IAA6B,CAACX,GAAGI,GAAJ,EAASJ,GAAGK,mBAAZ,CAA7B;AACAJ,UAAMC,mBAAYU,MAAlB,IAA4B,CAACZ,GAAGI,GAAJ,EAASJ,GAAGK,mBAAZ,CAA5B;AACAJ,UAAMC,mBAAYW,OAAlB,IAA6B,CAACb,GAAGI,GAAJ,EAASJ,GAAGK,mBAAZ,CAA7B;AACAJ,UAAMC,mBAAYY,WAAlB,IAAiC,CAACd,GAAGI,GAAJ,EAASJ,GAAGK,mBAAZ,CAAjC;AACAJ,UAAMC,mBAAYa,UAAlB,IAAgC,CAACf,GAAGI,GAAJ,EAASJ,GAAGK,mBAAZ,CAAhC;AACAJ,UAAMC,mBAAYc,UAAlB,IAAgC,CAAChB,GAAGI,GAAJ,EAASJ,GAAGK,mBAAZ,CAAhC;AACAJ,UAAMC,mBAAYe,UAAlB,IAAgC,CAACjB,GAAGI,GAAJ,EAASJ,GAAGK,mBAAZ,CAAhC;AACAJ,UAAMC,mBAAYgB,UAAlB,IAAgC,CAAClB,GAAGI,GAAJ,EAASJ,GAAGK,mBAAZ,CAAhC;AACAJ,UAAMC,mBAAYiB,SAAlB,IAA+B,CAACnB,GAAGI,GAAJ,EAASJ,GAAGK,mBAAZ,CAA/B;AACAJ,UAAMC,mBAAYkB,GAAlB,IAAyB,CAACpB,GAAGI,GAAJ,EAASJ,GAAGK,mBAAZ,CAAzB;AACAJ,UAAMC,mBAAYmB,UAAlB,IAAgC,CAACrB,GAAGI,GAAJ,EAASJ,GAAGK,mBAAZ,CAAhC;AACAJ,UAAMC,mBAAYoB,KAAlB,IAA2B,CAACtB,GAAGI,GAAJ,EAASJ,GAAGK,mBAAZ,CAA3B;AACAJ,UAAMC,mBAAYqB,UAAlB,IAAgC,CAACvB,GAAGI,GAAJ,EAASJ,GAAGK,mBAAZ,CAAhC;;AAEA,WAAOJ,KAAP;AACH","file":"mapWebGLBlendModesToPixi.js","sourcesContent":["import { BLEND_MODES } from '../../../const';\n\n/**\n * Maps gl blend combinations to WebGL.\n *\n * @memberof PIXI\n * @function mapWebGLBlendModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @param {string[]} [array=[]] - The array to output into.\n * @return {string[]} Mapped modes.\n */\nexport default function mapWebGLBlendModesToPixi(gl, array = [])\n{\n    // TODO - premultiply alpha would be different.\n    // add a boolean for that!\n    array[BLEND_MODES.NORMAL] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.ADD] = [gl.ONE, gl.ONE];\n    array[BLEND_MODES.MULTIPLY] = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SCREEN] = [gl.ONE, gl.ONE_MINUS_SRC_COLOR];\n    array[BLEND_MODES.OVERLAY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DARKEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.LIGHTEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR_DODGE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR_BURN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.HARD_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SOFT_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DIFFERENCE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.EXCLUSION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.HUE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SATURATION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.LUMINOSITY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n\n    return array;\n}\n"]}